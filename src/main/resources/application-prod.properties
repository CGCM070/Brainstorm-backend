# Configuracion para produccion (PostgreSQL en Render)
# Configuracion separada para evitar problemas con formato de URL de Render
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Configuracion especifica de HikariCP para PostgreSQL
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# JPA para PostgreSQL - sin especificar dialecto (Spring lo detecta automaticamente)
spring.jpa.show-sql=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=postgresql

# Optimizaciones para produccion
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=false

# Logging para produccion (menos verbose)
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Server configuration
server.port=${PORT:8080}

# CORS para produccion - Vercel
cors.allowed.origins=https://*.vercel.app,https://your-app-name.vercel.app
